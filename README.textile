h1. JRuby's compiler (jrubyc) maven plugin 

h2. Why?

JRuby is cool. 

Documentation on how to add JRuby to your existing java projects is not cool.

Let's try to change that (a little bit at least).

h2. Add ruby to your maven-powered Java projects

If you are using maven as a build tool, this plugin will help you add ruby to your project very easily.

h2. Installation

You need to have "JRuby installed":http://jruby.org/getting-started

Then, download the plugin sources from github and run @mvn clean install@ to locally install the plugin.

Then just add this to your pom.xml:

<pre>
<code>
<plugin>
  <groupId>org.jruby.compile.plugin</groupId>
  <artifactId>maven-jruby-plugin</artifactId>
  <version>1.0</version>
    <executions>
      <execution>
        <goals>
          <goal>jruby-compile</goal>
      </goals>
    </execution>
  </executions>
</plugin>
</code>
</pre>

And that's it :D

h2. How it works

This plugin will fire in the __generate-sources__ phase. 

It will search for ruby files in the folder:

<pre>
src/main/ruby
</pre>

And "compile" them to java files in:

<pre>
src/main/java
</pre>

Then the maven __compile__ phase will kick in and take care of the rest. Smooth.

h2. What now?

For now, this is it. I'm going to add a tutorial on how to invoke a ruby class implementing a java interface (something that is strangely missing in the internet at least at this moment) using the plugin so hopefully I can inspire you to start giving JRuby a try. It's worth it.

h2. About the author

My name is Pablo Fernandez. I live in Buenos Aires argentina.

You can follow me on twitter at @fernandezpablo

Or ping me (gtalk) / email me at fernandezpablo85 at gmail dot com

For professional contact, this is my "LinkedIn Profile":http://www.linkedin.com/in/fernandezpablo85